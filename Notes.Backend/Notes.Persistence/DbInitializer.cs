namespace Notes.Persistence
{
    /*
     * Класс DbInitializer предназначен для инициализации базы данных приложения. 
       В приведенном примере этот класс содержит один статический метод Initialize(), 
       который выполняет следующие задачи:

        * Принимает параметр context, который является экземпляром NotesDbContext. 
          Это пользовательский класс, представляющий контекст базы данных, который, 
          скорее всего, наследует от класса Microsoft.EntityFrameworkCore.DbContext. 
          Данный контекст используется для выполнения операций с базой данных.

        * Вызывает метод EnsureCreated() на context.Database. Этот метод гарантирует, 
          что база данных для указанного контекста была создана. Если база данных не существует, 
          метод EnsureCreated() создаст ее, используя миграции и конфигурацию моделей, содержащиеся 
          в контексте DbContext. Если база данных уже существует, в данном случае ничего не произойдет.

        * Когда приложение запускается или в процессе его работы вызывается метод Initialize() 
          класса DbInitializer, база данных будет создана автоматически, если она еще не была создана. 
          Это особенно полезно для разработки и тестирования, когда часто требуется создавать 
          новые экземпляры баз данных.

        Обратите внимание, что класс DbInitializer не должен быть ограничен этим простым примером. 
        Часто, в реальных проектах, инициализаторы баз данных могут также наполнять базу данных 
        начальными данными, выполнять обновления схем базы данных или выполнять иные задачи, 
        связанные с подготовкой базы данных к работе приложения.
    */
    public class DbInitializer
    {
        public static void Initialize(NotesDbContext context)
        {
            context.Database.EnsureCreated();
        }
    }
}
